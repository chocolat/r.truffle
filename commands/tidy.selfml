(trigger
    (key [[ctrl][shift]H]))

(name [Tidy (removes all comments!)])

(only-in [source.r -source.r.rd.console])

(input selection document)

(output replace-selected)

(save nothing)

(script [#[[ -z "$TM_SELECTED_TEXT" ]] && echo "Please select a function definition" && #exit_show_tool_tip

echo "dummy <- function() {" > /tmp/TM_Rtidy_func.R
cat >> /tmp/TM_Rtidy_func.R
echo "}" >> /tmp/TM_Rtidy_func.R

if [ $TM_SOFT_TABS == "YES" ]; then
	export TAB=$(perl -e 'print " " x $ENV{"TM_TAB_SIZE"}')
else
	export TAB="	"
fi

export TABLEVEL=$(head -n 2 /tmp/TM_Rtidy_func.R | tail -n 1 | perl -pe 's/^([ \t]*).*/$1/')

cat <<-HFS > /tmp/TM_Rtidy.R
options(keep.source = FALSE)
options(warn = -1)
options(show.error.messages = TRUE)
source("/tmp/TM_Rtidy_func.R")
dump(ls(all = TRUE), file = "/tmp/TM_Rtidy_func_new.R", control = c("keepInteger", "keepNA", "quoteExpressions"))
HFS

R --vanilla --slave < /tmp/TM_Rtidy.R 2> /tmp/TM_Rtidy.err

ERR=$(cat /tmp/TM_Rtidy.err | sed '1,3d' | sed '$d')
if [ ! -z "$ERR" ]; then
	[[ -e /tmp/TM_Rtidy_func.R ]] && rm /tmp/TM_Rtidy_func.R
	[[ -e /tmp/TM_Rtidy.R ]] && rm /tmp/TM_Rtidy.R
	[[ -e /tmp/TM_Rtidy_func_new.R ]] && rm /tmp/TM_Rtidy_func_new.R
	[[ -e /tmp/TM_Rtidy.err ]] && rm /tmp/TM_Rtidy.err
	echo "Syntax Error at:"
	if [ -z "$TM_SELECTED_TEXT" ]; then
		ERR=$(echo -en "$ERR" | perl -e '$_=<>;chomp;m/^(\d+):(.*)/;print "line " . ($1-1) . ": $2"')
		LINE=$(echo -en "$ERR" | perl -pe 's/^line (\d+):.*/$1/')
		open "txmt://open?line=$LINE"
	else
		ERR=$(echo -en "$ERR" | perl -e '$_=<>;chomp;m/^(\d+):(.*)/;print "line " . ($1-2+$ENV{"TM_INPUT_START_LINE"}) . ": $2"')
		LINE=$(echo -en "$ERR" | perl -pe 's/^line (\d+):.*/$1/')
		#LINE=$(($LINE + $TM_INPUT_START_LINE - 1))
		open "txmt://open?line=$LINE"
	fi
	echo -en "$ERR"
	exit_show_tool_tip
fi

if [ -e /tmp/TM_Rtidy_func_new.R ]; then
	cat /tmp/TM_Rtidy_func_new.R | sed '1,3d;$d' | perl -pe 's/^    /$ENV{"TABLEVEL"}/;s/^\`(.*?)\` <\-\n/$1 <\- /;s/ {4}/$ENV{"TAB"}/g;s/function \(/function(/;s/(.*?<\- function\()/\n$1/'
else
	echo "Unknown error occured"
	exit_show_tool_tip
fi

[[ -e /tmp/TM_Rtidy_func.R ]] && rm /tmp/TM_Rtidy_func.R
[[ -e /tmp/TM_Rtidy.R ]] && rm /tmp/TM_Rtidy.R
[[ -e /tmp/TM_Rtidy_func_new.R ]] && rm /tmp/TM_Rtidy_func_new.R
[[ -e /tmp/TM_Rtidy.err ]] && rm /tmp/TM_Rtidy.err



])